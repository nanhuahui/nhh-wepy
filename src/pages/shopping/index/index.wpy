<template>
  <indexLoading></indexLoading>
  <view height="100%" wx:if="{{loadComplete}}">
    <!-- 头部 -->
    <header :storeInfo.sync="storeInfo" :storeDetail.sync="storeDetail" :imgUrl.sync="imgUrl" componentId="indexHeader"></header>

    <!-- 轮播图 -->
    <swiper :turnsInfo.sync="turnsInfo" :imgDomain.sync="img_domain" componentId="indexSwiper"></swiper>

    <!-- 分类 -->
    <category :categoryList.sync="categoryArr" :imgUrl.sync="imgUrl" componentId="indexSwiper"></category>

    <!-- 通知 -->
    <!-- <noticeMarquee :imgUrl.sync="imgUrl" componentId="noticeMarquee"></noticeMarquee> -->

    <!-- 店主精选 -->
    <shoperChosen wx:if="{{storeInfo}}" :storeInfo.sync="storeInfo" :shoperGoods.sync="shopperChoose" :imgUrl.sync="imgUrl" :imgDomain.sync="img_domain" componentId="shoperChosen"></shoperChosen>

    <!-- 拍卖 -->
    <auction wx:if="{{!isReview}}" :imgDomain.sync="img_domain" :auctionList.sync="auctionList" :onlookerNum.sync="onlookerNum" :buyPersonNum.sync="buyPersonNum" componentId="auction"></auction>

    <!-- 每日上新 -->
    <newDaily :daily.sync="dailyInfo" :goods.sync="dailyGoods" :imgUrl.sync="imgUrl" componentId="newDaily"></newDaily>

    <!-- 限时特卖 -->
    <flashSale :imgDomain.sync="img_domain" componentId="flashSale"></flashSale>

    <!-- 消费商专区 -->
    <coustomerGoods wx:if="{{!isReview}}" :sevenActive.sync="sevenActive" :img_domain.sync="img_domain" :loadComplete.sync="loadComplete" componentId="coustomerGoods"></coustomerGoods>

    <!-- 今日特卖 -->
    <specialSale wx:if="{{!isReview}}" :active.sync="active" :imgDomain.sync="img_domain" :isActivity.sync="isActivity" componentId="specialSale"></specialSale>

    <!-- 24小时热销 -->
    <allDayHot :dayHot.sync="hotInfo" :goods.sync="hotGoods" :imgUrl.sync="imgUrl" componentId="allDayHot"></allDayHot>

    <!-- 今日精选 -->
    <todaySpecial :special.sync="special" :imgUrl.sync="imgUrl" :imgDomain.sync="img_domain" componentId="tadaySpecial"></todaySpecial>

    <!-- 楼层 -->
    <floorGoods :composeFloorArr.sync="composeFloorArr" :imgUrl.sync="imgUrl" componentId="floorGoods"></floorGoods>

    <!-- 个性推荐 -->
    <recommendSale :recommendList.sync="recommendList" :imgUrl.sync="imgUrl" :imgDomain.sync="img_domain" :recommendListShow.sync="recommendListShow" :catId.sync="catId" :pageNum.sync="pageNum" :isCollect.sync="isCollect" componentId="recommendSale"></recommendSale>
    <!-- 快捷导航 -->
    <import src="../../templates/quick-icon" />
    <template is="quickIcon" data="{{imgUrl, showQuickIcon, currentPageRoute: 'index'}}"/>

    <!-- 分享小程序码浮层 -->
    <qrPatchLayer isSlot="true" :shareImgArr.sync="shareImg" :shareTextArr.sync="shareText" :shareQR.sync="shareQR"></qrPatchLayer>

    <!--新增信息弹窗-->
    <view class="fixedPop" wx:if="{{popShow}}">
      <view class="fixedPic">
        <image src="{{imgUrl}}/newMessage.png" mode="widthFix"></image>
        <view class="toMessageList" bindtap="toMessageList">
        </view>
        <text class="close" bindtap="closeMessagePop"></text>
      </view>
    </view>
    <view id="popMask" wx:if="{{popShow}}"></view>
  </view>
</template>

<script>
import wepy from 'wepy'
import composeData from '@/utils/data'
import qrPatchLayer from '@/components/qrPatch-layer'
import header from './components/index-header'
import swiper from './components/index-swiper'
import category from './components/index-category'
import shoperChosen from './components/shoper-chosen'
import todaySpecial from './components/today-special'
import recommendSale from './components/recommend-sale'
import specialSale from './components/special-sale'
import coustomerGoods from './components/coustomer-goods'
import floorGoods from './components/floor-goods'
import newDaily from './components/new-daily'
import flashSale from './components/flash-sale'
import allDayHot from './components/all-day-hot'
import auction from './components/auction'
import indexLoading from './components/loading'
import qcMixin from '@/mixins/quickIcon'
// import noticeMarquee from './components/notice-marquee'
import { getCategory, getStoreIndex, getRecommend, getDistribution, addCart, addCollection, setCartNum } from '@/utils/api'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: ''
  }
  components = {
    header,
    swiper,
    category,
    shoperChosen,
    todaySpecial,
    recommendSale,
    specialSale,
    coustomerGoods,
    floorGoods,
    newDaily,
    flashSale,
    allDayHot,
    qrPatchLayer,
    auction,
    // noticeMarquee,
    indexLoading
  }
  mixins = [qcMixin]
  data = {
    imgUrl: '',
    goods_list: [],
    active: [],
    isActivity: null,
    add_new_list: [],
    composeFloorArr: [],
    storeInfo: null,
    storeDetail: null,
    loadComplete: false,
    special: null,
    dailyInfo: {}, // 每日上新
    dailyGoods: [], // 每日上新的商品
    hotInfo: {}, // 24小时热销
    hotGoods: [], // 24小时热销商品
    shopperChoose: [], // 店主精选
    avaterImg: '', // 头像
    sevenActive: {},
    turnsInfo: [],
    scroll_top: 0,
    recommendList: [], // 个性推荐总转载
    recommendListShow: [], // 要展示的个性推荐数据
    catId: [],            // 本次加载分类列表id
    pageNum: 0,            // 个性推荐页码
    showLoading: false,
    img_domain: null,
    isCollect: false,
    categoryArr: [], // 分类
    myAuctionNum: null, // 用户拍卖获拍未付款的商品数量
    popShow: false, // 新信息弹窗是否显示
    ptList: [], // 拼团商品列表
    ptTotalNum: null, // 参与拼团人数
    groupGoodsNumber: 0, // 拼团商品数量
    currentPageRoute: null,
    shopLink: null,
    shopLinkParam: null,
    shareImg: null,
    shareText: null,
    shareQR: null,
    auctionList: [], // 推荐的拍卖活动
    onlookerNum: null, // 拍卖围观人数
    buyPersonNum: null, // 拍卖出价次数
    isReview: wepy.getStorageSync('categoryFood')
  }

  computed = {}

  methods = {}

  onShareAppMessage(options) {
    if (options.from === 'button') {
      // 来自页面内转发按钮
      console.log(options.target)
    }
    let storeName = wepy.getStorageSync('store_nhh') ? wepy.getStorageSync('store_nhh').name : ''
    console.log('INDEX SHARE LINK:', this.shopLink + this.shopLinkParam)
    return {
      title: `${storeName}首页`,
      path: this.shopLink + this.shopLinkParam,
      // imageUrl: '自定义图片路径，可以是本地文件路径、代码包文件路径或者网络图片路径，支持PNG及JPG，不传入 imageUrl 则使用默认截图',
      success: function (res) {
        // 转发成功
        console.log('success', res)
        if (res.shareTickets) {
          // 获取转发详细信息
          let as = wepy.getShareInfo({
            shareTicket: res.shareTickets[0],
            success(res) {
              console.log(172, res)
              // res.errMsg // 错误信息
              // res.encryptedData //  解密后为一个 JSON 结构（openGId    群对当前小程序的唯一 ID）
              // res.iv // 加密算法的初始向量
            },
            fail() {},
            complete() {}
          })
          console.log(as)
        }
      },
      fail: function (res) {
        // 转发失败
        console.log('fail', res)
      }
    }
  }

  events = {
    'navigatAct': (...args) => {
      this.navigatAct(args[0], args[1])
    },
    'toBanner': (...args) => {
      this.toBanner(args[0])
    },
    'addToCart': (...args) => {
      this.addToCart(args[0], args[1], args[2])
    },
    'addToCollection': (...args) => {
      this.addToCollection(args[0], args[1])
    }
  }

  onLoad() {
    // 增加loading效果
    this.$invoke('indexLoading', 'show', {mode: 6})
    // 接收通知渲染小程序码贴片
    this.$parent.notificationCenter.register('drawQrPatch', this, 'didReceviceQrPathNotification')
  }

  onShow(e) {
    this.isReview = wepy.getStorageSync('categoryFood')
    this.imgUrl = this.$parent.globalData.imgUrl
    this.$apply()
    // 加载数据
    this.loadData()
    this.readyForQr()
    this.loadRecommend()
  }
  onHide() {
    // 离开时调用限时特卖的倒计时不再执行
    this.$invoke('flashSale', 'uninstall')
    // this.$invoke('noticeMarquee', 'uninstall')
  }
  onUnload() {
    console.log('index page is unload!!!')
  }
  didReceviceQrPathNotification(notification) {
    // 不要直接使用 this
    var _this = notification._this
    setTimeout(() => {
      // 重绘小程序码贴片
      _this.$invoke('qrPatchLayer', 'switchPatch', 'show')
    }, 500)
  }
  // 小程序码合成参数准备
  readyForQr() {
    let k = parseFloat(wepy.getStorageSync('placardIndex'))
    let w = wepy.getSystemInfoSync().windowWidth
    let h = wepy.getSystemInfoSync().windowHeight
    if (!isNaN(k)) {
      this.shareImg = composeData.placardDrawImg(k)
      this.shareText = composeData.placardDrawText
      // 设置小程序码
      this.shareQR = { link: this.shopLink, param: this.shopLinkParam, size: w / 5, x: w * 0.74, y: h - w / 5 - 30 }
    } else {
      this.shareImg = composeData.composeImageForIndex
      this.shareText = composeData.composeTextForIndex
      // 设置小程序码
      this.shareQR = { link: this.shopLink, param: this.shopLinkParam, size: w / 3, x: w / 3, y: h / 2 + 4 }
    }

    // 设置贴图的图片
    this.shareImg[1].src = wepy.getStorageSync('store_nhh').avatar
    this.shareText[0].text = wepy.getStorageSync('store_nhh') ? wepy.getStorageSync('store_nhh').name : '南华汇商城'
    this.$apply()
  }
  loadData() {
    let self = this
    self.shopLink = 'pages/shopping/index/index'
    self.shopLinkParam = wepy.getStorageSync('sellerId') ? `?s=${wepy.getStorageSync('sellerId')}` : ''
    self.$apply()
    // 获取分类菜单
    getCategory().then(({data: {errcode, data, msg}}) => {
      // console.log('分类菜单', errcode, data, msg)
      let self = this
      if (errcode === 0) {
        // 组装菜单
        self.data.categoryArr = []
        for (let m of data.parent_cat) {
          if (self.isReview && (m.cat_id === '112' || m.cat_id === '70')) {
            continue
          }
          // 组装菜单
          self.data.categoryArr.push({id: m.cat_id, name: m.cat_name, img: data.img_domain + m.cat_icon})
        }
        // 设置数据
        self.categoryArr = self.data.categoryArr
        // 汇商通知有新消息 且 在此次会话中未关闭新消息
        if (data.unread_circular && data.unread_circular === 1 && wepy.getStorageSync('closeMsg') === false) {
          self.$apply(() => {
            self.popShow = true
          })
        }
        // 拍卖逻辑
        if (data.user_auction) {
          data.user_auction.sort((a, b) => {
            // 按照状态值排序,1:未开始|2:进行中|3:结束
            return a.status > b.status
          })
          // 获取推荐的拍卖活动
          // this.limitTimeSwiper()
          self.$apply(() => {
            self.auctionList = data.user_auction
            self.onlookerNum = data.onlooker_num
            self.buyPersonNum = data.buy_person_num
          })
          self.$apply()
        }
        self.$apply(() => {
          self.myAuctionNum = data.my_auction_num
        })
        // 判断是否有未支付拍卖活动
        if (data.my_auction && data.my_auction.length > 0 && self.popShow === false) {
          wepy.showModal({
            title: '提示',
            content: `您有${data.my_auction_num}款获拍的商品待支付`,
            cancelText: '等会儿去',
            confirmText: '去支付'
          }).then((res) => {
            if (res.confirm) {
              self.$navigate(`../../user/myGetedAuction`)
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
          })
        }
        self.$apply()
      } else {
        console.error(msg)
      }
    }).catch((error) => {
      console.log('获取分类菜单失败！', error)
    })
    // 获取首页数据
    getStoreIndex({
      uid: wepy.getStorageSync('sellerId')
    }).then(({data: {errcode, data, msg}}) => {
      if (errcode === 0) {
        // 转换链接地址
        data.turns_info.map((t) => {
          let link = t.turns_link
          if (link.indexOf('panicBuy') > -1) {
            // 抢购地址转换
            t.turns_link = `../panicBuy${link.split('panicBuy')[1]}`
          }
        })
        // console.log('首页数据', errcode, data, msg)
        // 组装各个楼层数据
        let tempFloor = []

        tempFloor.push(
          Object.assign(data.hufu, {'banner': 'skin_care.jpg', 'title': '护肤专场'}),
          Object.assign(data.getixihu, {'banner': 'individual_care.jpg', 'title': '个人护理'})
        )
        if (!self.isReview) {
          tempFloor.push(
            Object.assign(data.yinyang, {'banner': 'nutrition.jpg', 'title': '营养保健'}),
            Object.assign(data.shipin, {'banner': 'food.jpg', 'title': '进口食品'})
          )
        }
        tempFloor.push(
          Object.assign(data.meizhuang, {'banner': 'beauty.jpg', 'title': '美妆专场'}),
          Object.assign(data.shenghuo, {'banner': 'quality_life.jpg', 'title': '品质生活'}),
          Object.assign(data.muyin, {'banner': 'child_care.jpg', 'title': '母婴专场'})
        )
        // 限时特卖
        this.$invoke('flashSale', 'render', {
          id: data.limit_id,
          current: data.fa_limit,
          next: data.time_next,
          timeList: data.fa_limit_arr,
          goodsList: data.limit_goods_list
        })
        // 每日上新
        if (data.add_new_list) {
          self.dailyGoods = data.add_new_list
          self.dailyInfo['now_time'] = data.today_time
          self.dailyInfo['new_id'] = data.new_id
        }
        // 24小时热销
        if (data.hot_list) {
          self.hotGoods = data.hot_list.hot_goods_list
          self.hotInfo['id'] = data.hot_list.id
          self.hotInfo['start_time'] = data.hot_list.start_time
        }
        // 设置数据
        self.$apply(() => {
          self.active = data.active
          self.isActivity = true
          self.add_new_list = data.add_new_list
          self.turnsInfo = data.turns_info
          self.img_domain = data.img_domain
          self.storeInfo = data.storeinfo
          self.storeDetail = data.store_detail
          self.composeFloorArr = tempFloor
          self.special = data.special
          self.shopperChoose = data.shop_best_goods
          self.ptList = data.pt_list
          self.ptTotalNum = data.pt_total_num
          self.special = data.special
          // self.groupGoodsNumber = groupGoodsNumber
          self.loadComplete = true
        })
        // 通知
        // this.$invoke('noticeMarquee', 'render', { noticeText: data.circular })
      } else {
        console.error(msg)
      }
      // 取消loading
      self.$invoke('indexLoading', 'hide')
    }).catch((error) => {
      console.log('获取首页数据失败！', error)
      self.$invoke('indexLoading', 'hide')
    })
    // 消费商专区
    getDistribution().then(({data: {errcode, data, msg}}) => {
      if (errcode === 0) {
        self.sevenActive = data
        self.$apply()
      } else {
        console.error(msg)
      }
    }).catch((error) => {
      console.log('获取消费商数据失败！', error)
    })
  }
  // 个性推荐
  loadRecommend() {
    if (this.isReview) {
      return false
    }
    let self = this
    getRecommend({
      rec_cat_id: self.data.catId,
      page: self.data.pageNum
    }).then(({data: {errcode, data, msg}}) => {
      // console.log('个性推荐', errcode, data, msg)
      if (errcode === 0) {
        let list = this.data.recommendListShow
        let recList = this.data.recommendList
        list.push(data.rec_goods_list_test_yy[0])
        for (var i = 0; i < data.rec_goods_list_test_yy.length; i++) {
          recList.push(data.rec_goods_list_test_yy[i])
        }
        self.$apply(() => {
          self.catId = data.cat_id
          self.recommendListShow = list
          self.recommendList = recList
        })
      } else {
        console.error(msg)
      }
    }).catch((error) => {
      console.log('获取分类菜单失败！', error)
    })
  }
  // 加载更多个性推荐
  onReachBottom() {
    let self = this
    // Do something when page reach bottom.
    let index = this.data.recommendListShow.length
    if (index < this.data.recommendList.length) {
      let listMore = this.data.recommendListShow
      listMore.push(this.data.recommendList[index])
      self.$apply()
    } else {
      let num = this.data.pageNum++
      self.$apply(() => {
        self.pageNum = num
        self.hidden = false
      })
      self.loadRecommend()
    }
  }
  /**
   * 添加收藏
   */
  addToCollection(gid) {
    let self = this
    // 请求数据
    addCollection(gid).then(({data: {errcode, data, msg}}) => {
      if (errcode === 0) {
        self.isCollect = true
        self.$apply()
      } else {
        wepy.showToast({
          title: msg,
          icon: 'none',
          duration: 2000
        })
      }
    }).catch((error) => {
      console.log('添加收藏失败！', error)
    })
  }
  /**
   * 添加购物车
   */
  addToCart(goodsId, upcId, number) {
    let self = this
    let params = {
      goods: JSON.stringify({
        'goods_id': goodsId,
        'upc_id': upcId,
        'number': number
      })
    }
    // 发送请求
    addCart(params).then(({data: {errcode, data, msg}}) => {
      if (errcode === 0) {
        console.log(data)
        if (data.buy_type === 0) {
          wepy.showToast({
            title: '添加成功',
            icon: 'success',
            duration: 2000
          })
          // 设置详情页的购物车数量
          self.cartCount = data.content
          self.$apply()
          setCartNum()
        } else {
          // 跳转至订单结算
          self.$navigate(`../../order/orderSubmit?one_step_buy=1`)
        }
      } else {
        wepy.showToast({
          title: msg,
          icon: 'none',
          duration: 2000
        })
      }
    })
  }
  // 今日特卖跳转
  navigatAct(isAct, item) {
    let self = this
    let len = isAct ? item.act_range_ext : item.count
    let actId = item.act_id
    if (len.split(',').length === 1) {
      wepy.request({
        url: `${self.$parent.globalData.apiUrl}/favourable_goods.php`,
        data: {
          id: actId
        }
      }).then(({data: {errcode, data, msg}}) => {
        if (errcode === 0) {
          self.$navigate(`../goods/goods?gid=${data.goods_list[0].upc_id}`)
        } else {
          console.error('获取商品列表失败:' + msg)
        }
      })
    }
    if (len.split(',').length > 1) {
      self.$navigate(`../panicBuy?id=${actId}`)
    }
  }
  // 轮播点击事件
  toBanner(url) {
    if (url.indexOf('aiwall') !== -1) {
      // 第三方链接
      this.$navigate(`../../thirdWebView/thirdWebView?url=${url}`)
    } else {
      this.$navigate(`${url}`)
    }
  }
  /*
   * 到信息列表页面
   */
  toMessageList () {
    this.$apply(() => {
      this.popShow = false
    })
    this.$navigate(`../../user/messageList`)
  }
  /*
   * 关闭新信息弹窗
   */
  closeMessagePop() {
    let self = this
    self.$apply(() => {
      self.popShow = false
    })
    wepy.setStorageSync('closeMsg', true)
    if (self.myAuctionNum && self.myAuctionNum !== 0) {
      wepy.showModal({
        title: '提示',
        content: '您有' + self.myAuctionNum + '款获拍的商品待支付',
        confirmText: '去支付',
        cancelText: '等会儿去'
      }).then((res) => {
        if (res.confirm) {
          wepy.navigateTo({
            url: '../../user/myGetedAuction'
          })
        } else if (res.cancel) {
          return false
        }
      })
    }
  }
}
</script>

<style lang="less">
@import '../../../assets/styles/index.wxss';
</style>
